// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  posts    Post[]
  likes    Like[]
  comments Comment[]

  @@index([name])
  @@index([email])
  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  body      String   @db.Text
  image     String?
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  comments Comment[]
  likes    Like[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([title])
  @@index([userId])
  @@map("posts")
}

model Like {
  id        Int      @id @default(autoincrement())
  postId    Int?
  userId    Int?
  createdAt DateTime @default(now())

  post Post? @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([postId])
  @@index([userId])
  @@index([userId, postId])
  @@index([postId, userId])
  @@map("likes")
}

model Comment {
  id       Int    @id @default(autoincrement())
  postId   Int?
  userId   Int
  parentId Int?
  body     String @db.Text

  post     Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  parent   Comment?  @relation("CommentReply", fields: [parentId], references: [id], onDelete: Cascade)
  children Comment[] @relation("CommentReply")

  @@index([postId])
  @@index([userId])
  @@index([postId, parentId])
  @@index([parentId])
  @@map("comments")
}
